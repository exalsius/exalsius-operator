name: release-please

on:
  push:
    branches:
      - main
  
permissions:
  contents: write
  pull-requests: write
  packages: write
  
jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      helm_tag_name: ${{ steps.release.outputs.helm_tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
          
  publish-helm:
      name: Publish Helm Chart to GHCR
      needs: release-please
      if: needs.release-please.outputs.releases_created == 'true'
      runs-on: ubuntu-latest
      permissions:
        packages: write
        contents: read
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Helm
          uses: azure/setup-helm@v4
          with:
            version: v4.3.0

        - name: Extract versions
          id: extract_version
          run: |
            # For the main operator version
            tag="${{ needs.release-please.outputs.tag_name }}"
            operator_version="${tag#v}"
            echo "operator_version=$operator_version" >> "$GITHUB_OUTPUT"
            
            # For the Helm chart version (if available)
            helm_tag="${{ needs.release-please.outputs.helm_tag_name }}"
            if [ -n "$helm_tag" ]; then
              echo "helm_version=${helm_tag#exalsius-operator-helm-v}" >> "$GITHUB_OUTPUT"
            else
              echo "helm_version=$operator_version" >> "$GITHUB_OUTPUT"
            fi

        - name: Sync appVersion in Helm Chart
          run: |
            version="${{ steps.extract_version.outputs.operator_version }}"
            chart="charts/exalsius-operator/charts/operator/Chart.yaml"
            echo "Patching appVersion to $version in $chart"
            yq eval ".appVersion = \"$version\"" -i "$chart"

        - name: Update Helm chart version if needed
          run: |
            helm_version="${{ steps.extract_version.outputs.helm_version }}"
            chart="charts/exalsius-operator/charts/operator/Chart.yaml"
            echo "Updating chart version to $helm_version in $chart"
            yq eval ".version = \"$helm_version\"" -i "$chart"

        - name: Log in to GHCR
          run: |
            echo "${{ secrets.RELEASE_PLEASE_GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

        - name: Package Helm chart
          run: |
            cd charts/exalsius-operator/charts/operator
            helm package .
            ls -lh *.tgz

        - name: Push chart to GHCR
          run: |
            cd charts/exalsius-operator/charts/operator
            helm push exalsius-operator-*.tgz oci://ghcr.io/${{ github.repository_owner }}

