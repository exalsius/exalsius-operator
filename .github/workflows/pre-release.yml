name: Release PR - Pre-Release E2E Tests

on:
  pull_request:
    branches: [main]

jobs:
  test-helm:
    #if: startsWith(github.head_ref, 'release-please--')
    runs-on: ubuntu-latest
    steps:
      - name: Clone the code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install the latest version of kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Verify kind installation
        run: kind version

      - name: Create kind cluster
        run: ./hack/start-dev-env.sh

      - name: Prepare exalsius-operator
        run: |
          go mod tidy
          make docker-build IMG=exalsius-operator:ci-test
          kind load docker-image exalsius-operator:ci-test

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Verify Helm installation
        run: helm version

      - name: Lint Helm Chart
        run: |
          helm lint charts/exalsius-operator/ --with-subcharts

      - name: Install exalsius-operator umbrella helm chart
        run: |
          set +e
          ./hack/install-ci.sh hack/ci-values.yaml
          echo "HELM_EXIT_CODE=$?" >> $GITHUB_ENV
          set -e
        continue-on-error: true

      - name: Show pod status
        run: kubectl get pods -n exalsius-system -o wide

      - name: Describe all pods
        run: |
          for pod in $(kubectl get pods -n exalsius-system -o name); do
            echo "==== $pod ===="
            kubectl describe "$pod" -n exalsius-system || true
          done

      - name: Get events
        run: kubectl get events -n exalsius-system --sort-by=.metadata.creationTimestamp

      - name: Check Helm release status
        run: |
          helm status exalsius --namespace exalsius-system

      - name: Fail workflow if Helm install failed
        if: ${{ env.HELM_EXIT_CODE != '0' }}
        run: |
          echo "Helm install failed. See debug output above."
          exit 1

      - name: Create a docker colony
        run: kubectl apply -f examples/docker-colony.yaml

      - name: Wait for docker colony to be ready
        run: |
          echo "Waiting for docker colony to be ready..."
          while true; do
            status=$(kubectl get colony docker-colony -o jsonpath='{.status.phase}')
            if [ "$status" = "Ready" ]; then
              echo "Docker colony is ready!"
              break
            fi
            echo "Current status: $status"
            sleep 10
          done